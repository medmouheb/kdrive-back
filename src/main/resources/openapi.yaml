openapi: 3.0.0
info:
  title: KDRIVE API
  description: API documentation for KDRIVE backend
  version: 1.0.0
servers:
  - url: https://api.kdrive.com/v1
    description: Production Server
  - url: http://localhost:8080/v1
    description: Local Development Server

security:
  - BearerAuth: []

paths:
  /auth/login:
    post:
      summary: User login with SSO (OKTA, Microsoft Entra)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  enum: [OKTA, MicrosoftEntra]
                token:
                  type: string
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  expiresIn:
                    type: integer
        "401":
          description: Unauthorized

  /users:
    get:
      summary: Get all users
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create a new user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully

  /documents:
    get:
      summary: Retrieve all documents with filtering, sorting, and pagination
      security:
        - BearerAuth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
        - name: owner
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: size
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: List of documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Document"

    post:
      summary: Upload a new document
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                metadata:
                  type: string
                  description: JSON string with document metadata
      responses:
        "201":
          description: Document uploaded successfully
        "400":
          description: Invalid request

  /documents/{id}:
    get:
      summary: Retrieve a specific document by ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Document details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
        "404":
          description: Document not found

    put:
      summary: Update a document's metadata
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      responses:
        "200":
          description: Document updated successfully
        "400":
          description: Invalid request
        "404":
          description: Document not found

    delete:
      summary: Delete a document
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Document deleted successfully
        "404":
          description: Document not found

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        role:
          type: string

    Document:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        owner:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          type: string
          enum: [ACTIVE, ARCHIVED, DELETED]
        metadata:
          type: object
          additionalProperties: true
